.gitignore => files and folder which you don't want to commit

.env => environment file in which we put some imp variables,credentials and url


cors=> cross origin request 

dotenv => to access env file in code


mongoose => create model => make custom validation and required properties



api list 
    for users
        signup
        login
        usersList


authentication and authorization
    authentication => validate the user access (login)
    authorization => user access to particular thing



mistakes in our initial signup
    in response we are sending password => done
    same user name error => done
    handle it in a good way => done
    encrypt the password =>done
    authorization token =>


encrypt password
    npm i bcrypt 



bcrypt => genSalt()
       => hash()

npm i jsonwebtoken
jwt => json web token
    payload
    secret
    expiry

    2 method
    sign(3 things)
    verify()


SocketIO
bidirectional and event-based communication between a client and a server.
(io) socket io listen to server (listen)


// Assign socket object to every request
app.use(function (req, res, next) {
  req.io = io;
  next();
});
socket-io - listen server -> use to every req

npm i socket.io
const io = require('socket.io')(server,  { cors: { origin: '*' } });

// Assign socket object to every request (middleware)
app.use(function (req, res, next) {
    req.io = io;
    next();
});
req.io.sockets.emit('messages', req.body.message);
 socket.on("messages", (data) => setLastMessage(data));



 chatting app
 3 model    
    Global message
    message
    Conversation

api list
    post Global message (/global)
    get Global message (/globalMessage)

    post personal(/personal)

    get(conversationList)
    get(conversation/user)



    ravi
ashvary
sudhir
manisha
krishna



4 account i will Creates
and do some conversation

global

personal


postman collection 




socket io (live chatting)

send message from react


api
    1.) to learn api
    2.) to save chatting

socket io
    Live chatting





